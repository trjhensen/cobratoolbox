# -*- coding: utf-8 -*-
"""get.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19W2brIXblMMvqcvHONEtR8NPAliptSMk
"""

import base64
import json

# Function to upload PDF to GitHub
def upload_pdf_to_github(pdf_file_path, target_path, branch="gh-pages"):
    with open(pdf_file_path, "rb") as pdf_file:
        content = base64.b64encode(pdf_file.read()).decode()

    # Prepare the API URL
    repo_name = "opencobra/cobratoolbox"
    api_url = f"https://api.github.com/repos/{repo_name}/contents/{target_path}"

    # Prepare the data for the PUT request
    file_name = os.path.basename(pdf_file_path)
    data = {
        "message": f"Add {file_name}",
        "content": content,
        "branch": branch
    }

    # Check if the file already exists (GitHub requires this to avoid conflicts)
    response = requests.get(api_url, headers=headers, params={'ref': branch})
    if response.status_code == 200:
        # If the file exists, you need to include the SHA in the update request
        file_info = response.json()
        data["sha"] = file_info["sha"]

    # Make the PUT request to upload the file
    response = requests.put(api_url, headers=headers, data=json.dumps(data))

    if response.status_code in [200, 201]:
        print(f"Successfully uploaded {file_name} to {target_path}")
    else:
        print(f"Failed to upload {file_name}. Error: {response.status_code}, {response.text}")

# Upload the PDFs to the corresponding GitHub directories
for result in results:
    if result['category'] == '.mlx and .html':
        folder_path = result['folder']
        pdf_file_name = os.path.basename(folder_path) + '.pdf'
        pdf_file_path = os.path.join(download_dir, pdf_file_name)
        target_path = os.path.join(folder_path, pdf_file_name)

        if os.path.exists(pdf_file_path):
            upload_pdf_to_github(pdf_file_path, target_path)
        else:
            print(f"PDF file {pdf_file_name} does not exist in {pdf_file_path}")