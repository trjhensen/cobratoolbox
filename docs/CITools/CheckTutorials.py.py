# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bWcjCWYRxQCz9-M3kUnvHj9RSllviv4O
"""

import requests
import matplotlib.pyplot as plt

# Base URL of the GitHub repository API
repo_api_url = "https://api.github.com/repos/opencobra/COBRA.tutorials/contents/"

# Your personal access token (replace 'YOUR_GITHUB_TOKEN' with your actual token)
headers = {
    'Authorization': 'token <Your_Access_Token>'
}

# Folders to analyze
folders = ['analysis', 'design', 'reconstruction', 'dataIntegration', 'base', 'visualization']

# Function to check files in a GitHub folder via API
def check_files(folder_url):
    response = requests.get(folder_url, headers=headers)
    if response.status_code == 200:
        files = response.json()
        has_mlx = any(file['name'].endswith('.mlx') for file in files)
        has_pdf = any(file['name'].endswith('.pdf') for file in files)
        has_html = any(file['name'].endswith('.html') for file in files)
        return has_mlx, has_pdf, has_html
    else:
        return None, None, None

# Store results
results = []
total_folders = 0
mlx_only_count = 0
all_files_count = 0

# Iterate through each folder
for folder in folders:
    folder_url = repo_api_url + folder
    folder_response = requests.get(folder_url, headers=headers)
    if folder_response.status_code == 200:
        subfolders = folder_response.json()
        for subfolder in subfolders:
            if subfolder['type'] == 'dir':
                subfolder_url = subfolder['url']
                has_mlx, has_pdf, has_html = check_files(subfolder_url)
                total_folders += 1

                if has_mlx and not has_pdf and not has_html:
                    mlx_only_count += 1
                if has_mlx and has_pdf and has_html:
                    all_files_count += 1

                results.append({
                    'folder': subfolder['path'],
                    'has_mlx': has_mlx,
                    'has_pdf': has_pdf,
                    'has_html': has_html
                })

# Calculate fractions
mlx_only_fraction = mlx_only_count / total_folders
all_files_fraction = all_files_count / total_folders

# Print results
print(f"Number of folders with only .mlx files: {mlx_only_count} ({mlx_only_fraction:.2%} of total folders)")
print(f"Number of folders with all file types (.mlx, .pdf, .html): {all_files_count} ({all_files_fraction:.2%} of total folders)")
print(f"Total number of folders analyzed: {total_folders}")